// Code generated by protoc-gen-go. DO NOT EDIT.
// source: primary.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Primary struct {
	PrimaryId string `protobuf:"bytes,1,opt,name=primary_id,json=primaryId,proto3" json:"primary_id,omitempty"`
	// primary: host:port
	Endpoint             string   `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Primary) Reset()         { *m = Primary{} }
func (m *Primary) String() string { return proto.CompactTextString(m) }
func (*Primary) ProtoMessage()    {}
func (*Primary) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d653641ecf6225, []int{0}
}

func (m *Primary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Primary.Unmarshal(m, b)
}
func (m *Primary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Primary.Marshal(b, m, deterministic)
}
func (m *Primary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Primary.Merge(m, src)
}
func (m *Primary) XXX_Size() int {
	return xxx_messageInfo_Primary.Size(m)
}
func (m *Primary) XXX_DiscardUnknown() {
	xxx_messageInfo_Primary.DiscardUnknown(m)
}

var xxx_messageInfo_Primary proto.InternalMessageInfo

func (m *Primary) GetPrimaryId() string {
	if m != nil {
		return m.PrimaryId
	}
	return ""
}

func (m *Primary) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

type AllPrimaries struct {
	WatcherId            string     `protobuf:"bytes,1,opt,name=watcher_id,json=watcherId,proto3" json:"watcher_id,omitempty"`
	Primaries            []*Primary `protobuf:"bytes,2,rep,name=primaries,proto3" json:"primaries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *AllPrimaries) Reset()         { *m = AllPrimaries{} }
func (m *AllPrimaries) String() string { return proto.CompactTextString(m) }
func (*AllPrimaries) ProtoMessage()    {}
func (*AllPrimaries) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d653641ecf6225, []int{1}
}

func (m *AllPrimaries) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllPrimaries.Unmarshal(m, b)
}
func (m *AllPrimaries) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllPrimaries.Marshal(b, m, deterministic)
}
func (m *AllPrimaries) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllPrimaries.Merge(m, src)
}
func (m *AllPrimaries) XXX_Size() int {
	return xxx_messageInfo_AllPrimaries.Size(m)
}
func (m *AllPrimaries) XXX_DiscardUnknown() {
	xxx_messageInfo_AllPrimaries.DiscardUnknown(m)
}

var xxx_messageInfo_AllPrimaries proto.InternalMessageInfo

func (m *AllPrimaries) GetWatcherId() string {
	if m != nil {
		return m.WatcherId
	}
	return ""
}

func (m *AllPrimaries) GetPrimaries() []*Primary {
	if m != nil {
		return m.Primaries
	}
	return nil
}

type IdentityRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdentityRequest) Reset()         { *m = IdentityRequest{} }
func (m *IdentityRequest) String() string { return proto.CompactTextString(m) }
func (*IdentityRequest) ProtoMessage()    {}
func (*IdentityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d653641ecf6225, []int{2}
}

func (m *IdentityRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdentityRequest.Unmarshal(m, b)
}
func (m *IdentityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdentityRequest.Marshal(b, m, deterministic)
}
func (m *IdentityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdentityRequest.Merge(m, src)
}
func (m *IdentityRequest) XXX_Size() int {
	return xxx_messageInfo_IdentityRequest.Size(m)
}
func (m *IdentityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IdentityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IdentityRequest proto.InternalMessageInfo

type IdentityResponse struct {
	PrimaryId            string   `protobuf:"bytes,1,opt,name=primary_id,json=primaryId,proto3" json:"primary_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdentityResponse) Reset()         { *m = IdentityResponse{} }
func (m *IdentityResponse) String() string { return proto.CompactTextString(m) }
func (*IdentityResponse) ProtoMessage()    {}
func (*IdentityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d653641ecf6225, []int{3}
}

func (m *IdentityResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdentityResponse.Unmarshal(m, b)
}
func (m *IdentityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdentityResponse.Marshal(b, m, deterministic)
}
func (m *IdentityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdentityResponse.Merge(m, src)
}
func (m *IdentityResponse) XXX_Size() int {
	return xxx_messageInfo_IdentityResponse.Size(m)
}
func (m *IdentityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IdentityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IdentityResponse proto.InternalMessageInfo

func (m *IdentityResponse) GetPrimaryId() string {
	if m != nil {
		return m.PrimaryId
	}
	return ""
}

type ChannelRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelRequest) Reset()         { *m = ChannelRequest{} }
func (m *ChannelRequest) String() string { return proto.CompactTextString(m) }
func (*ChannelRequest) ProtoMessage()    {}
func (*ChannelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d653641ecf6225, []int{4}
}

func (m *ChannelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelRequest.Unmarshal(m, b)
}
func (m *ChannelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelRequest.Marshal(b, m, deterministic)
}
func (m *ChannelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelRequest.Merge(m, src)
}
func (m *ChannelRequest) XXX_Size() int {
	return xxx_messageInfo_ChannelRequest.Size(m)
}
func (m *ChannelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelRequest proto.InternalMessageInfo

type ChannelResponse struct {
	// nfd: scheme://host:port
	Channels             []string `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelResponse) Reset()         { *m = ChannelResponse{} }
func (m *ChannelResponse) String() string { return proto.CompactTextString(m) }
func (*ChannelResponse) ProtoMessage()    {}
func (*ChannelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d653641ecf6225, []int{5}
}

func (m *ChannelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelResponse.Unmarshal(m, b)
}
func (m *ChannelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelResponse.Marshal(b, m, deterministic)
}
func (m *ChannelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelResponse.Merge(m, src)
}
func (m *ChannelResponse) XXX_Size() int {
	return xxx_messageInfo_ChannelResponse.Size(m)
}
func (m *ChannelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelResponse proto.InternalMessageInfo

func (m *ChannelResponse) GetChannels() []string {
	if m != nil {
		return m.Channels
	}
	return nil
}

type Route struct {
	Prefix               string   `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Cost                 int64    `protobuf:"varint,3,opt,name=cost,proto3" json:"cost,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Route) Reset()         { *m = Route{} }
func (m *Route) String() string { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()    {}
func (*Route) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d653641ecf6225, []int{6}
}

func (m *Route) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Route.Unmarshal(m, b)
}
func (m *Route) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Route.Marshal(b, m, deterministic)
}
func (m *Route) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Route.Merge(m, src)
}
func (m *Route) XXX_Size() int {
	return xxx_messageInfo_Route.Size(m)
}
func (m *Route) XXX_DiscardUnknown() {
	xxx_messageInfo_Route.DiscardUnknown(m)
}

var xxx_messageInfo_Route proto.InternalMessageInfo

func (m *Route) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *Route) GetCost() int64 {
	if m != nil {
		return m.Cost
	}
	return 0
}

type RouteRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouteRequest) Reset()         { *m = RouteRequest{} }
func (m *RouteRequest) String() string { return proto.CompactTextString(m) }
func (*RouteRequest) ProtoMessage()    {}
func (*RouteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d653641ecf6225, []int{7}
}

func (m *RouteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteRequest.Unmarshal(m, b)
}
func (m *RouteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteRequest.Marshal(b, m, deterministic)
}
func (m *RouteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteRequest.Merge(m, src)
}
func (m *RouteRequest) XXX_Size() int {
	return xxx_messageInfo_RouteRequest.Size(m)
}
func (m *RouteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RouteRequest proto.InternalMessageInfo

func (m *RouteRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RouteResponse struct {
	Routes               []*Route `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouteResponse) Reset()         { *m = RouteResponse{} }
func (m *RouteResponse) String() string { return proto.CompactTextString(m) }
func (*RouteResponse) ProtoMessage()    {}
func (*RouteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d653641ecf6225, []int{8}
}

func (m *RouteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteResponse.Unmarshal(m, b)
}
func (m *RouteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteResponse.Marshal(b, m, deterministic)
}
func (m *RouteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteResponse.Merge(m, src)
}
func (m *RouteResponse) XXX_Size() int {
	return xxx_messageInfo_RouteResponse.Size(m)
}
func (m *RouteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RouteResponse proto.InternalMessageInfo

func (m *RouteResponse) GetRoutes() []*Route {
	if m != nil {
		return m.Routes
	}
	return nil
}

type StatusRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusRequest) Reset()         { *m = StatusRequest{} }
func (m *StatusRequest) String() string { return proto.CompactTextString(m) }
func (*StatusRequest) ProtoMessage()    {}
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d653641ecf6225, []int{9}
}

func (m *StatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusRequest.Unmarshal(m, b)
}
func (m *StatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusRequest.Marshal(b, m, deterministic)
}
func (m *StatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusRequest.Merge(m, src)
}
func (m *StatusRequest) XXX_Size() int {
	return xxx_messageInfo_StatusRequest.Size(m)
}
func (m *StatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatusRequest proto.InternalMessageInfo

type StatusResponse struct {
	Memory               int64    `protobuf:"varint,1,opt,name=memory,proto3" json:"memory,omitempty"`
	CsCapacity           int64    `protobuf:"varint,2,opt,name=cs_capacity,json=csCapacity,proto3" json:"cs_capacity,omitempty"`
	CsEntries            int64    `protobuf:"varint,3,opt,name=cs_entries,json=csEntries,proto3" json:"cs_entries,omitempty"`
	CsHits               int64    `protobuf:"varint,4,opt,name=cs_hits,json=csHits,proto3" json:"cs_hits,omitempty"`
	CsMisses             int64    `protobuf:"varint,5,opt,name=cs_misses,json=csMisses,proto3" json:"cs_misses,omitempty"`
	FibEntries           int64    `protobuf:"varint,6,opt,name=fib_entries,json=fibEntries,proto3" json:"fib_entries,omitempty"`
	RibEntries           int64    `protobuf:"varint,7,opt,name=rib_entries,json=ribEntries,proto3" json:"rib_entries,omitempty"`
	PitEntries           int64    `protobuf:"varint,8,opt,name=pit_entries,json=pitEntries,proto3" json:"pit_entries,omitempty"`
	ChanEntries          int64    `protobuf:"varint,9,opt,name=chan_entries,json=chanEntries,proto3" json:"chan_entries,omitempty"`
	FaceEntries          int64    `protobuf:"varint,10,opt,name=face_entries,json=faceEntries,proto3" json:"face_entries,omitempty"`
	IntSatisifed         int64    `protobuf:"varint,11,opt,name=int_satisifed,json=intSatisifed,proto3" json:"int_satisifed,omitempty"`
	IntUnsatisfied       int64    `protobuf:"varint,12,opt,name=int_unsatisfied,json=intUnsatisfied,proto3" json:"int_unsatisfied,omitempty"`
	PktInInt             int64    `protobuf:"varint,13,opt,name=pkt_in_int,json=pktInInt,proto3" json:"pkt_in_int,omitempty"`
	PktInData            int64    `protobuf:"varint,14,opt,name=pkt_in_data,json=pktInData,proto3" json:"pkt_in_data,omitempty"`
	PktInNack            int64    `protobuf:"varint,15,opt,name=pkt_in_nack,json=pktInNack,proto3" json:"pkt_in_nack,omitempty"`
	PktOutInt            int64    `protobuf:"varint,16,opt,name=pkt_out_int,json=pktOutInt,proto3" json:"pkt_out_int,omitempty"`
	PktOutData           int64    `protobuf:"varint,17,opt,name=pkt_out_data,json=pktOutData,proto3" json:"pkt_out_data,omitempty"`
	PktOutNack           int64    `protobuf:"varint,18,opt,name=pkt_out_nack,json=pktOutNack,proto3" json:"pkt_out_nack,omitempty"`
	BytesIn              int64    `protobuf:"varint,19,opt,name=bytes_in,json=bytesIn,proto3" json:"bytes_in,omitempty"`
	BytesOut             int64    `protobuf:"varint,20,opt,name=bytes_out,json=bytesOut,proto3" json:"bytes_out,omitempty"`
	Id                   string   `protobuf:"bytes,21,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusResponse) Reset()         { *m = StatusResponse{} }
func (m *StatusResponse) String() string { return proto.CompactTextString(m) }
func (*StatusResponse) ProtoMessage()    {}
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d653641ecf6225, []int{10}
}

func (m *StatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusResponse.Unmarshal(m, b)
}
func (m *StatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusResponse.Marshal(b, m, deterministic)
}
func (m *StatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusResponse.Merge(m, src)
}
func (m *StatusResponse) XXX_Size() int {
	return xxx_messageInfo_StatusResponse.Size(m)
}
func (m *StatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatusResponse proto.InternalMessageInfo

func (m *StatusResponse) GetMemory() int64 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *StatusResponse) GetCsCapacity() int64 {
	if m != nil {
		return m.CsCapacity
	}
	return 0
}

func (m *StatusResponse) GetCsEntries() int64 {
	if m != nil {
		return m.CsEntries
	}
	return 0
}

func (m *StatusResponse) GetCsHits() int64 {
	if m != nil {
		return m.CsHits
	}
	return 0
}

func (m *StatusResponse) GetCsMisses() int64 {
	if m != nil {
		return m.CsMisses
	}
	return 0
}

func (m *StatusResponse) GetFibEntries() int64 {
	if m != nil {
		return m.FibEntries
	}
	return 0
}

func (m *StatusResponse) GetRibEntries() int64 {
	if m != nil {
		return m.RibEntries
	}
	return 0
}

func (m *StatusResponse) GetPitEntries() int64 {
	if m != nil {
		return m.PitEntries
	}
	return 0
}

func (m *StatusResponse) GetChanEntries() int64 {
	if m != nil {
		return m.ChanEntries
	}
	return 0
}

func (m *StatusResponse) GetFaceEntries() int64 {
	if m != nil {
		return m.FaceEntries
	}
	return 0
}

func (m *StatusResponse) GetIntSatisifed() int64 {
	if m != nil {
		return m.IntSatisifed
	}
	return 0
}

func (m *StatusResponse) GetIntUnsatisfied() int64 {
	if m != nil {
		return m.IntUnsatisfied
	}
	return 0
}

func (m *StatusResponse) GetPktInInt() int64 {
	if m != nil {
		return m.PktInInt
	}
	return 0
}

func (m *StatusResponse) GetPktInData() int64 {
	if m != nil {
		return m.PktInData
	}
	return 0
}

func (m *StatusResponse) GetPktInNack() int64 {
	if m != nil {
		return m.PktInNack
	}
	return 0
}

func (m *StatusResponse) GetPktOutInt() int64 {
	if m != nil {
		return m.PktOutInt
	}
	return 0
}

func (m *StatusResponse) GetPktOutData() int64 {
	if m != nil {
		return m.PktOutData
	}
	return 0
}

func (m *StatusResponse) GetPktOutNack() int64 {
	if m != nil {
		return m.PktOutNack
	}
	return 0
}

func (m *StatusResponse) GetBytesIn() int64 {
	if m != nil {
		return m.BytesIn
	}
	return 0
}

func (m *StatusResponse) GetBytesOut() int64 {
	if m != nil {
		return m.BytesOut
	}
	return 0
}

func (m *StatusResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RegisterRequest struct {
	SecondaryId          string   `protobuf:"bytes,1,opt,name=secondary_id,json=secondaryId,proto3" json:"secondary_id,omitempty"`
	Channels             []string `protobuf:"bytes,2,rep,name=channels,proto3" json:"channels,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterRequest) Reset()         { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()    {}
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d653641ecf6225, []int{11}
}

func (m *RegisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRequest.Unmarshal(m, b)
}
func (m *RegisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRequest.Marshal(b, m, deterministic)
}
func (m *RegisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRequest.Merge(m, src)
}
func (m *RegisterRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterRequest.Size(m)
}
func (m *RegisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRequest proto.InternalMessageInfo

func (m *RegisterRequest) GetSecondaryId() string {
	if m != nil {
		return m.SecondaryId
	}
	return ""
}

func (m *RegisterRequest) GetChannels() []string {
	if m != nil {
		return m.Channels
	}
	return nil
}

type RegisterControl struct {
	Primaries            []*Primary `protobuf:"bytes,1,rep,name=primaries,proto3" json:"primaries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RegisterControl) Reset()         { *m = RegisterControl{} }
func (m *RegisterControl) String() string { return proto.CompactTextString(m) }
func (*RegisterControl) ProtoMessage()    {}
func (*RegisterControl) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d653641ecf6225, []int{12}
}

func (m *RegisterControl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterControl.Unmarshal(m, b)
}
func (m *RegisterControl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterControl.Marshal(b, m, deterministic)
}
func (m *RegisterControl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterControl.Merge(m, src)
}
func (m *RegisterControl) XXX_Size() int {
	return xxx_messageInfo_RegisterControl.Size(m)
}
func (m *RegisterControl) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterControl.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterControl proto.InternalMessageInfo

func (m *RegisterControl) GetPrimaries() []*Primary {
	if m != nil {
		return m.Primaries
	}
	return nil
}

func init() {
	proto.RegisterType((*Primary)(nil), "api.Primary")
	proto.RegisterType((*AllPrimaries)(nil), "api.AllPrimaries")
	proto.RegisterType((*IdentityRequest)(nil), "api.IdentityRequest")
	proto.RegisterType((*IdentityResponse)(nil), "api.IdentityResponse")
	proto.RegisterType((*ChannelRequest)(nil), "api.ChannelRequest")
	proto.RegisterType((*ChannelResponse)(nil), "api.ChannelResponse")
	proto.RegisterType((*Route)(nil), "api.Route")
	proto.RegisterType((*RouteRequest)(nil), "api.RouteRequest")
	proto.RegisterType((*RouteResponse)(nil), "api.RouteResponse")
	proto.RegisterType((*StatusRequest)(nil), "api.StatusRequest")
	proto.RegisterType((*StatusResponse)(nil), "api.StatusResponse")
	proto.RegisterType((*RegisterRequest)(nil), "api.RegisterRequest")
	proto.RegisterType((*RegisterControl)(nil), "api.RegisterControl")
}

func init() { proto.RegisterFile("primary.proto", fileDescriptor_92d653641ecf6225) }

var fileDescriptor_92d653641ecf6225 = []byte{
	// 795 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x55, 0x5d, 0x6f, 0xe3, 0x44,
	0x14, 0x5d, 0x27, 0x6d, 0x9a, 0x5c, 0x3b, 0x49, 0x3b, 0xdb, 0x5d, 0x8c, 0x81, 0xdd, 0xac, 0x79,
	0xa0, 0x42, 0xa2, 0x2a, 0x2d, 0x12, 0x02, 0xc4, 0x03, 0xea, 0x22, 0xc8, 0x03, 0x6c, 0xe5, 0x8a,
	0x07, 0x9e, 0xac, 0xe9, 0x78, 0x4c, 0x47, 0x4d, 0xc7, 0xc6, 0xf7, 0x5a, 0x90, 0x5f, 0xc3, 0xaf,
	0xe3, 0x7f, 0x20, 0xcf, 0x8c, 0x1d, 0x3b, 0x54, 0xf0, 0x96, 0x7b, 0xce, 0xb9, 0xe7, 0xce, 0x87,
	0xe7, 0x04, 0xe6, 0x65, 0xa5, 0x1e, 0x79, 0xb5, 0x3d, 0x2f, 0xab, 0x82, 0x0a, 0x36, 0xe6, 0xa5,
	0x8a, 0xdf, 0xc2, 0xd1, 0x8d, 0x45, 0xd9, 0x47, 0x00, 0x4e, 0x90, 0xaa, 0x2c, 0xf4, 0x56, 0xde,
	0xd9, 0x2c, 0x99, 0x39, 0x64, 0x9d, 0xb1, 0x08, 0xa6, 0x52, 0x67, 0x65, 0xa1, 0x34, 0x85, 0x23,
	0x43, 0x76, 0x75, 0xfc, 0x2b, 0x04, 0xdf, 0x6d, 0x36, 0xd6, 0x48, 0x49, 0x6c, 0xac, 0xfe, 0xe0,
	0x24, 0xee, 0x65, 0xd5, 0xb3, 0x72, 0xc8, 0x3a, 0x63, 0x9f, 0x82, 0xf3, 0x55, 0x12, 0xc3, 0xd1,
	0x6a, 0x7c, 0xe6, 0x5f, 0x06, 0xe7, 0xbc, 0x54, 0xe7, 0x6e, 0x29, 0xc9, 0x8e, 0x8e, 0x4f, 0x60,
	0xb9, 0xce, 0xa4, 0x26, 0x45, 0xdb, 0x44, 0xfe, 0x5e, 0x4b, 0xa4, 0xf8, 0x73, 0x38, 0xde, 0x41,
	0x58, 0x16, 0x1a, 0xe5, 0xff, 0x2c, 0x3e, 0x3e, 0x86, 0xc5, 0xf5, 0x3d, 0xd7, 0x5a, 0x6e, 0x5a,
	0x93, 0xcf, 0x60, 0xd9, 0x21, 0xce, 0x23, 0x82, 0xa9, 0xb0, 0x10, 0x86, 0xde, 0x6a, 0xdc, 0xec,
	0xb0, 0xad, 0xe3, 0x2b, 0x38, 0x4c, 0x8a, 0x9a, 0x24, 0x7b, 0x09, 0x93, 0xb2, 0x92, 0xb9, 0xfa,
	0xd3, 0x0d, 0x71, 0x15, 0x63, 0x70, 0x20, 0x0a, 0xa4, 0x70, 0xbc, 0xf2, 0xce, 0xc6, 0x89, 0xf9,
	0x1d, 0xbf, 0x82, 0xc0, 0x34, 0xb9, 0x99, 0x6c, 0x01, 0xa3, 0x6e, 0x71, 0x23, 0x95, 0xc5, 0x57,
	0x30, 0x77, 0xbc, 0x5b, 0x41, 0x0c, 0x93, 0xaa, 0x01, 0xec, 0x7c, 0xff, 0x12, 0xcc, 0xa9, 0x58,
	0x8d, 0x63, 0xe2, 0x25, 0xcc, 0x6f, 0x89, 0x53, 0x8d, 0xed, 0x4e, 0xfe, 0x3a, 0x84, 0x45, 0x8b,
	0x38, 0x9f, 0x97, 0x30, 0x79, 0x94, 0x8f, 0x45, 0xb5, 0x35, 0xc3, 0xc6, 0x89, 0xab, 0xd8, 0x6b,
	0xf0, 0x05, 0xa6, 0x82, 0x97, 0x5c, 0x28, 0xda, 0x9a, 0x6b, 0x1c, 0x27, 0x20, 0xf0, 0xda, 0x21,
	0xcd, 0x31, 0x0a, 0x4c, 0xa5, 0x26, 0x73, 0x35, 0x76, 0x2f, 0x33, 0x81, 0xdf, 0x5b, 0x80, 0xbd,
	0x07, 0x47, 0x02, 0xd3, 0x7b, 0x45, 0x18, 0x1e, 0x58, 0x63, 0x81, 0x3f, 0x2a, 0x42, 0xf6, 0x01,
	0xcc, 0x04, 0xa6, 0x8f, 0x0a, 0x51, 0x62, 0x78, 0x68, 0xa8, 0xa9, 0xc0, 0x9f, 0x4c, 0xdd, 0x4c,
	0xcd, 0xd5, 0x5d, 0xe7, 0x3a, 0xb1, 0x53, 0x73, 0x75, 0xd7, 0xda, 0xbe, 0x06, 0xbf, 0xea, 0x09,
	0x8e, 0xac, 0xa0, 0x1a, 0x08, 0x4a, 0x45, 0x9d, 0x60, 0x6a, 0x05, 0xa5, 0xa2, 0x56, 0xf0, 0x06,
	0x82, 0xe6, 0xaa, 0x3a, 0xc5, 0xcc, 0x28, 0xfc, 0x06, 0xeb, 0x49, 0x72, 0x2e, 0x64, 0x27, 0x01,
	0x2b, 0x69, 0xb0, 0x56, 0xf2, 0x31, 0xcc, 0x95, 0xa6, 0x14, 0x39, 0x29, 0x54, 0xb9, 0xcc, 0x42,
	0xdf, 0x68, 0x02, 0xa5, 0xe9, 0xb6, 0xc5, 0xd8, 0x27, 0xb0, 0x6c, 0x44, 0xb5, 0x36, 0xb2, 0x5c,
	0xc9, 0x2c, 0x0c, 0x8c, 0x6c, 0xa1, 0x34, 0xfd, 0xb2, 0x43, 0xd9, 0x87, 0x00, 0xe5, 0x03, 0xa5,
	0x4a, 0xa7, 0xcd, 0x93, 0x99, 0xdb, 0x43, 0x29, 0x1f, 0x68, 0xad, 0xd7, 0x9a, 0xd8, 0x2b, 0xf0,
	0x1d, 0x9b, 0x71, 0xe2, 0xe1, 0xc2, 0x1e, 0xb5, 0xa1, 0xdf, 0x72, 0xe2, 0x3d, 0x5e, 0x73, 0xf1,
	0x10, 0x2e, 0x7b, 0xfc, 0xcf, 0x5c, 0x3c, 0xb4, 0x7c, 0x51, 0x93, 0xb1, 0x3f, 0xee, 0xf8, 0x77,
	0x35, 0x35, 0xfe, 0x2b, 0x08, 0x5a, 0xde, 0x0c, 0x38, 0x71, 0x67, 0x66, 0x04, 0x66, 0x42, 0x4f,
	0x61, 0x46, 0xb0, 0xbe, 0xc2, 0xcc, 0x78, 0x1f, 0xa6, 0x77, 0x5b, 0x92, 0x98, 0x2a, 0x1d, 0x3e,
	0x37, 0xec, 0x91, 0xa9, 0xd7, 0xba, 0xb9, 0x70, 0x4b, 0x15, 0x35, 0x85, 0xa7, 0x76, 0x6f, 0x06,
	0x78, 0x57, 0xb7, 0xdf, 0xf9, 0x8b, 0xee, 0x3b, 0xbf, 0x81, 0x65, 0x22, 0x7f, 0x53, 0x48, 0xb2,
	0x6a, 0x9f, 0xc2, 0x1b, 0x08, 0x50, 0x8a, 0x42, 0x67, 0x83, 0x17, 0xeb, 0x77, 0x98, 0x0d, 0x9c,
	0xee, 0x39, 0x8e, 0xf6, 0x9e, 0xe3, 0xb7, 0x3b, 0xc7, 0xeb, 0x42, 0x53, 0x55, 0x6c, 0x86, 0xa1,
	0xe2, 0xfd, 0x67, 0xa8, 0x5c, 0x22, 0xcc, 0x12, 0x99, 0x6f, 0xa4, 0xa0, 0xa2, 0x62, 0x17, 0x30,
	0xdb, 0x25, 0xd7, 0xa0, 0x25, 0x3a, 0x31, 0x55, 0x3f, 0xda, 0xe2, 0x67, 0x17, 0x1e, 0xfb, 0x02,
	0x26, 0x3f, 0x14, 0x88, 0xaa, 0x64, 0xff, 0x16, 0x3c, 0xd9, 0x73, 0xe6, 0x5d, 0x78, 0x97, 0x7f,
	0x8f, 0xe0, 0x60, 0xad, 0xf3, 0x82, 0x7d, 0x05, 0xd3, 0x36, 0xbf, 0xd8, 0xa9, 0x51, 0xef, 0x25,
	0x5c, 0xf4, 0x62, 0x0f, 0xb5, 0xcf, 0x3a, 0x7e, 0xc6, 0xbe, 0x84, 0xa9, 0x4b, 0x2d, 0x64, 0xcf,
	0x8d, 0x68, 0x18, 0x6b, 0xd1, 0xe9, 0x10, 0xec, 0x1a, 0xaf, 0x60, 0x62, 0x62, 0x04, 0xdd, 0x92,
	0xfb, 0xb9, 0x14, 0xb1, 0x3e, 0xd4, 0xb6, 0x5c, 0x78, 0xec, 0x1b, 0x80, 0x9b, 0x1a, 0xef, 0x6d,
	0xb8, 0xb8, 0x79, 0xc3, 0xa4, 0x71, 0xad, 0xc3, 0x40, 0x32, 0xdb, 0xb5, 0xcd, 0x9b, 0x8d, 0x6b,
	0x7e, 0x42, 0x17, 0x3d, 0x65, 0xe8, 0x9a, 0xbf, 0x86, 0x69, 0x7b, 0xbf, 0xee, 0x88, 0xf6, 0x3e,
	0xa0, 0x68, 0x88, 0xba, 0x8f, 0xa0, 0x59, 0xf5, 0xdd, 0xc4, 0xfc, 0xbd, 0x5d, 0xfd, 0x13, 0x00,
	0x00, 0xff, 0xff, 0xe2, 0x38, 0xd1, 0xcd, 0xef, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ReflectorClient is the client API for Reflector service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReflectorClient interface {
	// request sent by Primary
	Primaries(ctx context.Context, in *Primary, opts ...grpc.CallOption) (Reflector_PrimariesClient, error)
	// request sent by Watcher
	Gossip(ctx context.Context, opts ...grpc.CallOption) (Reflector_GossipClient, error)
}

type reflectorClient struct {
	cc *grpc.ClientConn
}

func NewReflectorClient(cc *grpc.ClientConn) ReflectorClient {
	return &reflectorClient{cc}
}

func (c *reflectorClient) Primaries(ctx context.Context, in *Primary, opts ...grpc.CallOption) (Reflector_PrimariesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Reflector_serviceDesc.Streams[0], "/api.Reflector/Primaries", opts...)
	if err != nil {
		return nil, err
	}
	x := &reflectorPrimariesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Reflector_PrimariesClient interface {
	Recv() (*AllPrimaries, error)
	grpc.ClientStream
}

type reflectorPrimariesClient struct {
	grpc.ClientStream
}

func (x *reflectorPrimariesClient) Recv() (*AllPrimaries, error) {
	m := new(AllPrimaries)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *reflectorClient) Gossip(ctx context.Context, opts ...grpc.CallOption) (Reflector_GossipClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Reflector_serviceDesc.Streams[1], "/api.Reflector/Gossip", opts...)
	if err != nil {
		return nil, err
	}
	x := &reflectorGossipClient{stream}
	return x, nil
}

type Reflector_GossipClient interface {
	Send(*AllPrimaries) error
	Recv() (*AllPrimaries, error)
	grpc.ClientStream
}

type reflectorGossipClient struct {
	grpc.ClientStream
}

func (x *reflectorGossipClient) Send(m *AllPrimaries) error {
	return x.ClientStream.SendMsg(m)
}

func (x *reflectorGossipClient) Recv() (*AllPrimaries, error) {
	m := new(AllPrimaries)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ReflectorServer is the server API for Reflector service.
type ReflectorServer interface {
	// request sent by Primary
	Primaries(*Primary, Reflector_PrimariesServer) error
	// request sent by Watcher
	Gossip(Reflector_GossipServer) error
}

// UnimplementedReflectorServer can be embedded to have forward compatible implementations.
type UnimplementedReflectorServer struct {
}

func (*UnimplementedReflectorServer) Primaries(req *Primary, srv Reflector_PrimariesServer) error {
	return status.Errorf(codes.Unimplemented, "method Primaries not implemented")
}
func (*UnimplementedReflectorServer) Gossip(srv Reflector_GossipServer) error {
	return status.Errorf(codes.Unimplemented, "method Gossip not implemented")
}

func RegisterReflectorServer(s *grpc.Server, srv ReflectorServer) {
	s.RegisterService(&_Reflector_serviceDesc, srv)
}

func _Reflector_Primaries_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Primary)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ReflectorServer).Primaries(m, &reflectorPrimariesServer{stream})
}

type Reflector_PrimariesServer interface {
	Send(*AllPrimaries) error
	grpc.ServerStream
}

type reflectorPrimariesServer struct {
	grpc.ServerStream
}

func (x *reflectorPrimariesServer) Send(m *AllPrimaries) error {
	return x.ServerStream.SendMsg(m)
}

func _Reflector_Gossip_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ReflectorServer).Gossip(&reflectorGossipServer{stream})
}

type Reflector_GossipServer interface {
	Send(*AllPrimaries) error
	Recv() (*AllPrimaries, error)
	grpc.ServerStream
}

type reflectorGossipServer struct {
	grpc.ServerStream
}

func (x *reflectorGossipServer) Send(m *AllPrimaries) error {
	return x.ServerStream.SendMsg(m)
}

func (x *reflectorGossipServer) Recv() (*AllPrimaries, error) {
	m := new(AllPrimaries)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Reflector_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Reflector",
	HandlerType: (*ReflectorServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Primaries",
			Handler:       _Reflector_Primaries_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Gossip",
			Handler:       _Reflector_Gossip_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "primary.proto",
}

// InfoClient is the client API for Info service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InfoClient interface {
	Identity(ctx context.Context, in *IdentityRequest, opts ...grpc.CallOption) (*IdentityResponse, error)
	// request sent by Secondary
	Channels(ctx context.Context, in *ChannelRequest, opts ...grpc.CallOption) (*ChannelResponse, error)
	// request sent by Secondary (and Primary?)
	Routes(ctx context.Context, in *RouteRequest, opts ...grpc.CallOption) (Info_RoutesClient, error)
	// request sent by Secondary
	PushStatus(ctx context.Context, opts ...grpc.CallOption) (Info_PushStatusClient, error)
	// request sent by Watcher
	PullStatus(ctx context.Context, opts ...grpc.CallOption) (Info_PullStatusClient, error)
	// control Secondary
	Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (Info_RegisterClient, error)
}

type infoClient struct {
	cc *grpc.ClientConn
}

func NewInfoClient(cc *grpc.ClientConn) InfoClient {
	return &infoClient{cc}
}

func (c *infoClient) Identity(ctx context.Context, in *IdentityRequest, opts ...grpc.CallOption) (*IdentityResponse, error) {
	out := new(IdentityResponse)
	err := c.cc.Invoke(ctx, "/api.Info/Identity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *infoClient) Channels(ctx context.Context, in *ChannelRequest, opts ...grpc.CallOption) (*ChannelResponse, error) {
	out := new(ChannelResponse)
	err := c.cc.Invoke(ctx, "/api.Info/Channels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *infoClient) Routes(ctx context.Context, in *RouteRequest, opts ...grpc.CallOption) (Info_RoutesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Info_serviceDesc.Streams[0], "/api.Info/Routes", opts...)
	if err != nil {
		return nil, err
	}
	x := &infoRoutesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Info_RoutesClient interface {
	Recv() (*RouteResponse, error)
	grpc.ClientStream
}

type infoRoutesClient struct {
	grpc.ClientStream
}

func (x *infoRoutesClient) Recv() (*RouteResponse, error) {
	m := new(RouteResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *infoClient) PushStatus(ctx context.Context, opts ...grpc.CallOption) (Info_PushStatusClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Info_serviceDesc.Streams[1], "/api.Info/PushStatus", opts...)
	if err != nil {
		return nil, err
	}
	x := &infoPushStatusClient{stream}
	return x, nil
}

type Info_PushStatusClient interface {
	Send(*StatusResponse) error
	Recv() (*StatusRequest, error)
	grpc.ClientStream
}

type infoPushStatusClient struct {
	grpc.ClientStream
}

func (x *infoPushStatusClient) Send(m *StatusResponse) error {
	return x.ClientStream.SendMsg(m)
}

func (x *infoPushStatusClient) Recv() (*StatusRequest, error) {
	m := new(StatusRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *infoClient) PullStatus(ctx context.Context, opts ...grpc.CallOption) (Info_PullStatusClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Info_serviceDesc.Streams[2], "/api.Info/PullStatus", opts...)
	if err != nil {
		return nil, err
	}
	x := &infoPullStatusClient{stream}
	return x, nil
}

type Info_PullStatusClient interface {
	Send(*StatusRequest) error
	Recv() (*StatusResponse, error)
	grpc.ClientStream
}

type infoPullStatusClient struct {
	grpc.ClientStream
}

func (x *infoPullStatusClient) Send(m *StatusRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *infoPullStatusClient) Recv() (*StatusResponse, error) {
	m := new(StatusResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *infoClient) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (Info_RegisterClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Info_serviceDesc.Streams[3], "/api.Info/Register", opts...)
	if err != nil {
		return nil, err
	}
	x := &infoRegisterClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Info_RegisterClient interface {
	Recv() (*RegisterControl, error)
	grpc.ClientStream
}

type infoRegisterClient struct {
	grpc.ClientStream
}

func (x *infoRegisterClient) Recv() (*RegisterControl, error) {
	m := new(RegisterControl)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// InfoServer is the server API for Info service.
type InfoServer interface {
	Identity(context.Context, *IdentityRequest) (*IdentityResponse, error)
	// request sent by Secondary
	Channels(context.Context, *ChannelRequest) (*ChannelResponse, error)
	// request sent by Secondary (and Primary?)
	Routes(*RouteRequest, Info_RoutesServer) error
	// request sent by Secondary
	PushStatus(Info_PushStatusServer) error
	// request sent by Watcher
	PullStatus(Info_PullStatusServer) error
	// control Secondary
	Register(*RegisterRequest, Info_RegisterServer) error
}

// UnimplementedInfoServer can be embedded to have forward compatible implementations.
type UnimplementedInfoServer struct {
}

func (*UnimplementedInfoServer) Identity(ctx context.Context, req *IdentityRequest) (*IdentityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Identity not implemented")
}
func (*UnimplementedInfoServer) Channels(ctx context.Context, req *ChannelRequest) (*ChannelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Channels not implemented")
}
func (*UnimplementedInfoServer) Routes(req *RouteRequest, srv Info_RoutesServer) error {
	return status.Errorf(codes.Unimplemented, "method Routes not implemented")
}
func (*UnimplementedInfoServer) PushStatus(srv Info_PushStatusServer) error {
	return status.Errorf(codes.Unimplemented, "method PushStatus not implemented")
}
func (*UnimplementedInfoServer) PullStatus(srv Info_PullStatusServer) error {
	return status.Errorf(codes.Unimplemented, "method PullStatus not implemented")
}
func (*UnimplementedInfoServer) Register(req *RegisterRequest, srv Info_RegisterServer) error {
	return status.Errorf(codes.Unimplemented, "method Register not implemented")
}

func RegisterInfoServer(s *grpc.Server, srv InfoServer) {
	s.RegisterService(&_Info_serviceDesc, srv)
}

func _Info_Identity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdentityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InfoServer).Identity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Info/Identity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InfoServer).Identity(ctx, req.(*IdentityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Info_Channels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InfoServer).Channels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Info/Channels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InfoServer).Channels(ctx, req.(*ChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Info_Routes_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RouteRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(InfoServer).Routes(m, &infoRoutesServer{stream})
}

type Info_RoutesServer interface {
	Send(*RouteResponse) error
	grpc.ServerStream
}

type infoRoutesServer struct {
	grpc.ServerStream
}

func (x *infoRoutesServer) Send(m *RouteResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Info_PushStatus_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(InfoServer).PushStatus(&infoPushStatusServer{stream})
}

type Info_PushStatusServer interface {
	Send(*StatusRequest) error
	Recv() (*StatusResponse, error)
	grpc.ServerStream
}

type infoPushStatusServer struct {
	grpc.ServerStream
}

func (x *infoPushStatusServer) Send(m *StatusRequest) error {
	return x.ServerStream.SendMsg(m)
}

func (x *infoPushStatusServer) Recv() (*StatusResponse, error) {
	m := new(StatusResponse)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Info_PullStatus_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(InfoServer).PullStatus(&infoPullStatusServer{stream})
}

type Info_PullStatusServer interface {
	Send(*StatusResponse) error
	Recv() (*StatusRequest, error)
	grpc.ServerStream
}

type infoPullStatusServer struct {
	grpc.ServerStream
}

func (x *infoPullStatusServer) Send(m *StatusResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *infoPullStatusServer) Recv() (*StatusRequest, error) {
	m := new(StatusRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Info_Register_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RegisterRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(InfoServer).Register(m, &infoRegisterServer{stream})
}

type Info_RegisterServer interface {
	Send(*RegisterControl) error
	grpc.ServerStream
}

type infoRegisterServer struct {
	grpc.ServerStream
}

func (x *infoRegisterServer) Send(m *RegisterControl) error {
	return x.ServerStream.SendMsg(m)
}

var _Info_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Info",
	HandlerType: (*InfoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Identity",
			Handler:    _Info_Identity_Handler,
		},
		{
			MethodName: "Channels",
			Handler:    _Info_Channels_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Routes",
			Handler:       _Info_Routes_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "PushStatus",
			Handler:       _Info_PushStatus_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "PullStatus",
			Handler:       _Info_PullStatus_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "Register",
			Handler:       _Info_Register_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "primary.proto",
}
