// Code generated by protoc-gen-go. DO NOT EDIT.
// source: primary.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ClusterList struct {
	Id                   string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Clusters             []*Cluster `protobuf:"bytes,2,rep,name=clusters,proto3" json:"clusters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ClusterList) Reset()         { *m = ClusterList{} }
func (m *ClusterList) String() string { return proto.CompactTextString(m) }
func (*ClusterList) ProtoMessage()    {}
func (*ClusterList) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d653641ecf6225, []int{0}
}

func (m *ClusterList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterList.Unmarshal(m, b)
}
func (m *ClusterList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterList.Marshal(b, m, deterministic)
}
func (m *ClusterList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterList.Merge(m, src)
}
func (m *ClusterList) XXX_Size() int {
	return xxx_messageInfo_ClusterList.Size(m)
}
func (m *ClusterList) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterList.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterList proto.InternalMessageInfo

func (m *ClusterList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ClusterList) GetClusters() []*Cluster {
	if m != nil {
		return m.Clusters
	}
	return nil
}

type Cluster struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Primary              string   `protobuf:"bytes,2,opt,name=primary,proto3" json:"primary,omitempty"`
	Routes               []*Route `protobuf:"bytes,3,rep,name=routes,proto3" json:"routes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cluster) Reset()         { *m = Cluster{} }
func (m *Cluster) String() string { return proto.CompactTextString(m) }
func (*Cluster) ProtoMessage()    {}
func (*Cluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d653641ecf6225, []int{1}
}

func (m *Cluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cluster.Unmarshal(m, b)
}
func (m *Cluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cluster.Marshal(b, m, deterministic)
}
func (m *Cluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cluster.Merge(m, src)
}
func (m *Cluster) XXX_Size() int {
	return xxx_messageInfo_Cluster.Size(m)
}
func (m *Cluster) XXX_DiscardUnknown() {
	xxx_messageInfo_Cluster.DiscardUnknown(m)
}

var xxx_messageInfo_Cluster proto.InternalMessageInfo

func (m *Cluster) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Cluster) GetPrimary() string {
	if m != nil {
		return m.Primary
	}
	return ""
}

func (m *Cluster) GetRoutes() []*Route {
	if m != nil {
		return m.Routes
	}
	return nil
}

type Route struct {
	Prefix               string   `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Endpoint             string   `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Cost                 int64    `protobuf:"varint,3,opt,name=cost,proto3" json:"cost,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Route) Reset()         { *m = Route{} }
func (m *Route) String() string { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()    {}
func (*Route) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d653641ecf6225, []int{2}
}

func (m *Route) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Route.Unmarshal(m, b)
}
func (m *Route) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Route.Marshal(b, m, deterministic)
}
func (m *Route) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Route.Merge(m, src)
}
func (m *Route) XXX_Size() int {
	return xxx_messageInfo_Route.Size(m)
}
func (m *Route) XXX_DiscardUnknown() {
	xxx_messageInfo_Route.DiscardUnknown(m)
}

var xxx_messageInfo_Route proto.InternalMessageInfo

func (m *Route) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *Route) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *Route) GetCost() int64 {
	if m != nil {
		return m.Cost
	}
	return 0
}

type ChannelRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelRequest) Reset()         { *m = ChannelRequest{} }
func (m *ChannelRequest) String() string { return proto.CompactTextString(m) }
func (*ChannelRequest) ProtoMessage()    {}
func (*ChannelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d653641ecf6225, []int{3}
}

func (m *ChannelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelRequest.Unmarshal(m, b)
}
func (m *ChannelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelRequest.Marshal(b, m, deterministic)
}
func (m *ChannelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelRequest.Merge(m, src)
}
func (m *ChannelRequest) XXX_Size() int {
	return xxx_messageInfo_ChannelRequest.Size(m)
}
func (m *ChannelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelRequest proto.InternalMessageInfo

type ChannelResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelResponse) Reset()         { *m = ChannelResponse{} }
func (m *ChannelResponse) String() string { return proto.CompactTextString(m) }
func (*ChannelResponse) ProtoMessage()    {}
func (*ChannelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d653641ecf6225, []int{4}
}

func (m *ChannelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelResponse.Unmarshal(m, b)
}
func (m *ChannelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelResponse.Marshal(b, m, deterministic)
}
func (m *ChannelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelResponse.Merge(m, src)
}
func (m *ChannelResponse) XXX_Size() int {
	return xxx_messageInfo_ChannelResponse.Size(m)
}
func (m *ChannelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelResponse proto.InternalMessageInfo

type StatusRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusRequest) Reset()         { *m = StatusRequest{} }
func (m *StatusRequest) String() string { return proto.CompactTextString(m) }
func (*StatusRequest) ProtoMessage()    {}
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d653641ecf6225, []int{5}
}

func (m *StatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusRequest.Unmarshal(m, b)
}
func (m *StatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusRequest.Marshal(b, m, deterministic)
}
func (m *StatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusRequest.Merge(m, src)
}
func (m *StatusRequest) XXX_Size() int {
	return xxx_messageInfo_StatusRequest.Size(m)
}
func (m *StatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatusRequest proto.InternalMessageInfo

type StatusResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusResponse) Reset()         { *m = StatusResponse{} }
func (m *StatusResponse) String() string { return proto.CompactTextString(m) }
func (*StatusResponse) ProtoMessage()    {}
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d653641ecf6225, []int{6}
}

func (m *StatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusResponse.Unmarshal(m, b)
}
func (m *StatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusResponse.Marshal(b, m, deterministic)
}
func (m *StatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusResponse.Merge(m, src)
}
func (m *StatusResponse) XXX_Size() int {
	return xxx_messageInfo_StatusResponse.Size(m)
}
func (m *StatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatusResponse proto.InternalMessageInfo

type RegisterRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterRequest) Reset()         { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()    {}
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d653641ecf6225, []int{7}
}

func (m *RegisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRequest.Unmarshal(m, b)
}
func (m *RegisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRequest.Marshal(b, m, deterministic)
}
func (m *RegisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRequest.Merge(m, src)
}
func (m *RegisterRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterRequest.Size(m)
}
func (m *RegisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRequest proto.InternalMessageInfo

func (m *RegisterRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RegisterControl struct {
	Routes               []*Route `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterControl) Reset()         { *m = RegisterControl{} }
func (m *RegisterControl) String() string { return proto.CompactTextString(m) }
func (*RegisterControl) ProtoMessage()    {}
func (*RegisterControl) Descriptor() ([]byte, []int) {
	return fileDescriptor_92d653641ecf6225, []int{8}
}

func (m *RegisterControl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterControl.Unmarshal(m, b)
}
func (m *RegisterControl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterControl.Marshal(b, m, deterministic)
}
func (m *RegisterControl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterControl.Merge(m, src)
}
func (m *RegisterControl) XXX_Size() int {
	return xxx_messageInfo_RegisterControl.Size(m)
}
func (m *RegisterControl) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterControl.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterControl proto.InternalMessageInfo

func (m *RegisterControl) GetRoutes() []*Route {
	if m != nil {
		return m.Routes
	}
	return nil
}

func init() {
	proto.RegisterType((*ClusterList)(nil), "api.ClusterList")
	proto.RegisterType((*Cluster)(nil), "api.Cluster")
	proto.RegisterType((*Route)(nil), "api.Route")
	proto.RegisterType((*ChannelRequest)(nil), "api.ChannelRequest")
	proto.RegisterType((*ChannelResponse)(nil), "api.ChannelResponse")
	proto.RegisterType((*StatusRequest)(nil), "api.StatusRequest")
	proto.RegisterType((*StatusResponse)(nil), "api.StatusResponse")
	proto.RegisterType((*RegisterRequest)(nil), "api.RegisterRequest")
	proto.RegisterType((*RegisterControl)(nil), "api.RegisterControl")
}

func init() { proto.RegisterFile("primary.proto", fileDescriptor_92d653641ecf6225) }

var fileDescriptor_92d653641ecf6225 = []byte{
	// 355 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xcf, 0x4b, 0xfb, 0x40,
	0x10, 0xc5, 0xbb, 0xc9, 0xf7, 0x9b, 0xc6, 0xa9, 0xfd, 0xe1, 0x54, 0x24, 0xe4, 0x54, 0xf7, 0x94,
	0x53, 0x29, 0x15, 0x29, 0xf4, 0x5a, 0xa4, 0x17, 0x41, 0x58, 0x0f, 0x9e, 0x63, 0xbb, 0xea, 0x42,
	0x9b, 0x5d, 0x77, 0x37, 0xa0, 0xfe, 0xf5, 0xd2, 0xcd, 0x26, 0x36, 0x15, 0x6f, 0x99, 0xcf, 0xbc,
	0x79, 0x93, 0x37, 0x09, 0xf4, 0x95, 0x16, 0xfb, 0x5c, 0x7f, 0x4e, 0x95, 0x96, 0x56, 0x62, 0x98,
	0x2b, 0x41, 0xd7, 0xd0, 0x5b, 0xed, 0x4a, 0x63, 0xb9, 0xbe, 0x17, 0xc6, 0xe2, 0x00, 0x02, 0xb1,
	0x4d, 0xc8, 0x84, 0x64, 0x67, 0x2c, 0x10, 0x5b, 0xcc, 0x20, 0xde, 0x54, 0x6d, 0x93, 0x04, 0x93,
	0x30, 0xeb, 0xcd, 0xcf, 0xa7, 0xb9, 0x12, 0x53, 0x3f, 0xc3, 0x9a, 0x2e, 0x7d, 0x82, 0xae, 0x87,
	0xbf, 0x4c, 0x12, 0xe8, 0xfa, 0xcd, 0x49, 0xe0, 0x60, 0x5d, 0x22, 0x85, 0x48, 0xcb, 0xd2, 0x72,
	0x93, 0x84, 0xce, 0x1c, 0x9c, 0x39, 0x3b, 0x20, 0xe6, 0x3b, 0xf4, 0x01, 0xfe, 0x3b, 0x80, 0x57,
	0x10, 0x29, 0xcd, 0x5f, 0xc4, 0x87, 0xb7, 0xf6, 0x15, 0xa6, 0x10, 0xf3, 0x62, 0xab, 0xa4, 0x28,
	0xac, 0xf7, 0x6f, 0x6a, 0x44, 0xf8, 0xb7, 0x91, 0xc6, 0x26, 0xe1, 0x84, 0x64, 0x21, 0x73, 0xcf,
	0x74, 0x04, 0x83, 0xd5, 0x5b, 0x5e, 0x14, 0x7c, 0xc7, 0xf8, 0x7b, 0xc9, 0x8d, 0xa5, 0x17, 0x30,
	0x6c, 0x88, 0x51, 0xb2, 0x30, 0x9c, 0x0e, 0xa1, 0xff, 0x68, 0x73, 0x5b, 0x9a, 0x5a, 0x33, 0x82,
	0x41, 0x0d, 0xbc, 0xe4, 0x1a, 0x86, 0x8c, 0xbf, 0x0a, 0x77, 0x87, 0x4a, 0x74, 0x9a, 0x9c, 0xde,
	0xfe, 0x48, 0x56, 0xb2, 0xb0, 0x5a, 0xee, 0x8e, 0x22, 0x93, 0xbf, 0x22, 0xcf, 0x97, 0x10, 0xad,
	0xa5, 0x31, 0x42, 0xe1, 0x0c, 0x62, 0x7f, 0x55, 0x83, 0xad, 0xcb, 0xa7, 0xa3, 0xe3, 0xea, 0xf0,
	0xed, 0x68, 0x27, 0x23, 0x33, 0x32, 0xff, 0x82, 0xa8, 0x7a, 0x4f, 0x5c, 0x40, 0xec, 0x53, 0x19,
	0x1c, 0x57, 0xea, 0x56, 0xec, 0xf4, 0xb2, 0x0d, 0x7d, 0xac, 0x0e, 0x2e, 0x0e, 0x16, 0x9a, 0xe7,
	0x7b, 0x44, 0xa7, 0x68, 0x1d, 0x22, 0x1d, 0xb7, 0x58, 0x3d, 0xe4, 0x76, 0xdf, 0x41, 0xb7, 0x8e,
	0xb9, 0x84, 0xb8, 0x4e, 0x8e, 0xd5, 0x9e, 0x93, 0x5b, 0xa5, 0x6d, 0xea, 0xe7, 0x68, 0x67, 0x46,
	0x9e, 0x23, 0xf7, 0x7f, 0xde, 0x7c, 0x07, 0x00, 0x00, 0xff, 0xff, 0xb2, 0x4b, 0xd7, 0xfc, 0xb0,
	0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GossipClient is the client API for Gossip service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GossipClient interface {
	Clusters(ctx context.Context, opts ...grpc.CallOption) (Gossip_ClustersClient, error)
}

type gossipClient struct {
	cc *grpc.ClientConn
}

func NewGossipClient(cc *grpc.ClientConn) GossipClient {
	return &gossipClient{cc}
}

func (c *gossipClient) Clusters(ctx context.Context, opts ...grpc.CallOption) (Gossip_ClustersClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Gossip_serviceDesc.Streams[0], "/api.Gossip/Clusters", opts...)
	if err != nil {
		return nil, err
	}
	x := &gossipClustersClient{stream}
	return x, nil
}

type Gossip_ClustersClient interface {
	Send(*Cluster) error
	Recv() (*ClusterList, error)
	grpc.ClientStream
}

type gossipClustersClient struct {
	grpc.ClientStream
}

func (x *gossipClustersClient) Send(m *Cluster) error {
	return x.ClientStream.SendMsg(m)
}

func (x *gossipClustersClient) Recv() (*ClusterList, error) {
	m := new(ClusterList)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GossipServer is the server API for Gossip service.
type GossipServer interface {
	Clusters(Gossip_ClustersServer) error
}

// UnimplementedGossipServer can be embedded to have forward compatible implementations.
type UnimplementedGossipServer struct {
}

func (*UnimplementedGossipServer) Clusters(srv Gossip_ClustersServer) error {
	return status.Errorf(codes.Unimplemented, "method Clusters not implemented")
}

func RegisterGossipServer(s *grpc.Server, srv GossipServer) {
	s.RegisterService(&_Gossip_serviceDesc, srv)
}

func _Gossip_Clusters_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GossipServer).Clusters(&gossipClustersServer{stream})
}

type Gossip_ClustersServer interface {
	Send(*ClusterList) error
	Recv() (*Cluster, error)
	grpc.ServerStream
}

type gossipClustersServer struct {
	grpc.ServerStream
}

func (x *gossipClustersServer) Send(m *ClusterList) error {
	return x.ServerStream.SendMsg(m)
}

func (x *gossipClustersServer) Recv() (*Cluster, error) {
	m := new(Cluster)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Gossip_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Gossip",
	HandlerType: (*GossipServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Clusters",
			Handler:       _Gossip_Clusters_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "primary.proto",
}

// StatusClient is the client API for Status service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StatusClient interface {
	Channels(ctx context.Context, in *ChannelRequest, opts ...grpc.CallOption) (*ChannelResponse, error)
	Stream(ctx context.Context, opts ...grpc.CallOption) (Status_StreamClient, error)
}

type statusClient struct {
	cc *grpc.ClientConn
}

func NewStatusClient(cc *grpc.ClientConn) StatusClient {
	return &statusClient{cc}
}

func (c *statusClient) Channels(ctx context.Context, in *ChannelRequest, opts ...grpc.CallOption) (*ChannelResponse, error) {
	out := new(ChannelResponse)
	err := c.cc.Invoke(ctx, "/api.Status/Channels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statusClient) Stream(ctx context.Context, opts ...grpc.CallOption) (Status_StreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Status_serviceDesc.Streams[0], "/api.Status/Stream", opts...)
	if err != nil {
		return nil, err
	}
	x := &statusStreamClient{stream}
	return x, nil
}

type Status_StreamClient interface {
	Send(*StatusRequest) error
	Recv() (*StatusResponse, error)
	grpc.ClientStream
}

type statusStreamClient struct {
	grpc.ClientStream
}

func (x *statusStreamClient) Send(m *StatusRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *statusStreamClient) Recv() (*StatusResponse, error) {
	m := new(StatusResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// StatusServer is the server API for Status service.
type StatusServer interface {
	Channels(context.Context, *ChannelRequest) (*ChannelResponse, error)
	Stream(Status_StreamServer) error
}

// UnimplementedStatusServer can be embedded to have forward compatible implementations.
type UnimplementedStatusServer struct {
}

func (*UnimplementedStatusServer) Channels(ctx context.Context, req *ChannelRequest) (*ChannelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Channels not implemented")
}
func (*UnimplementedStatusServer) Stream(srv Status_StreamServer) error {
	return status.Errorf(codes.Unimplemented, "method Stream not implemented")
}

func RegisterStatusServer(s *grpc.Server, srv StatusServer) {
	s.RegisterService(&_Status_serviceDesc, srv)
}

func _Status_Channels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatusServer).Channels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Status/Channels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatusServer).Channels(ctx, req.(*ChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Status_Stream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(StatusServer).Stream(&statusStreamServer{stream})
}

type Status_StreamServer interface {
	Send(*StatusResponse) error
	Recv() (*StatusRequest, error)
	grpc.ServerStream
}

type statusStreamServer struct {
	grpc.ServerStream
}

func (x *statusStreamServer) Send(m *StatusResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *statusStreamServer) Recv() (*StatusRequest, error) {
	m := new(StatusRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Status_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Status",
	HandlerType: (*StatusServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Channels",
			Handler:    _Status_Channels_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Stream",
			Handler:       _Status_Stream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "primary.proto",
}

// ControlClient is the client API for Control service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ControlClient interface {
	Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (Control_RegisterClient, error)
}

type controlClient struct {
	cc *grpc.ClientConn
}

func NewControlClient(cc *grpc.ClientConn) ControlClient {
	return &controlClient{cc}
}

func (c *controlClient) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (Control_RegisterClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Control_serviceDesc.Streams[0], "/api.Control/Register", opts...)
	if err != nil {
		return nil, err
	}
	x := &controlRegisterClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Control_RegisterClient interface {
	Recv() (*RegisterControl, error)
	grpc.ClientStream
}

type controlRegisterClient struct {
	grpc.ClientStream
}

func (x *controlRegisterClient) Recv() (*RegisterControl, error) {
	m := new(RegisterControl)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ControlServer is the server API for Control service.
type ControlServer interface {
	Register(*RegisterRequest, Control_RegisterServer) error
}

// UnimplementedControlServer can be embedded to have forward compatible implementations.
type UnimplementedControlServer struct {
}

func (*UnimplementedControlServer) Register(req *RegisterRequest, srv Control_RegisterServer) error {
	return status.Errorf(codes.Unimplemented, "method Register not implemented")
}

func RegisterControlServer(s *grpc.Server, srv ControlServer) {
	s.RegisterService(&_Control_serviceDesc, srv)
}

func _Control_Register_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RegisterRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ControlServer).Register(m, &controlRegisterServer{stream})
}

type Control_RegisterServer interface {
	Send(*RegisterControl) error
	grpc.ServerStream
}

type controlRegisterServer struct {
	grpc.ServerStream
}

func (x *controlRegisterServer) Send(m *RegisterControl) error {
	return x.ServerStream.SendMsg(m)
}

var _Control_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Control",
	HandlerType: (*ControlServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Register",
			Handler:       _Control_Register_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "primary.proto",
}
